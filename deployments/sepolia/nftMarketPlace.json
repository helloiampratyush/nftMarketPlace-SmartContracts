{
  "address": "0x1C09CEe1C1F73E0100664F8A5a2f8cbCa84a55a9",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenID",
          "type": "uint256"
        }
      ],
      "name": "nftMarketPlace__alreadyListed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "nftMarketPlace__notAnyProceed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "nftMarketPlace__notApprovedByMarketPlace",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenID",
          "type": "uint256"
        }
      ],
      "name": "nftMarketPlace__notListed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "nftMarketPlace__notListedPrice",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "nftMarketPlace__notOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "nftMarketPlace__notZeroPriceNft",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "nftMarketPlace__transactionFailed",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "Price",
          "type": "uint256"
        }
      ],
      "name": "itemBought",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenID",
          "type": "uint256"
        }
      ],
      "name": "itemCanceled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "itemListed",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenID",
          "type": "uint256"
        }
      ],
      "name": "buyItem",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenID",
          "type": "uint256"
        }
      ],
      "name": "cancelItem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenID",
          "type": "uint256"
        }
      ],
      "name": "getListing",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            }
          ],
          "internalType": "struct nftMarketPlace.Listing",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "seller",
          "type": "address"
        }
      ],
      "name": "getProceed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "listItem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "newPrice",
          "type": "uint256"
        }
      ],
      "name": "updateItem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawProceed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x79b9ba5f044351e7ca8a37bc169474d7457a5d9bb241fdc13603e2c85edd394f",
  "receipt": {
    "to": null,
    "from": "0xe13e7f455ffed653A0e4ACbC8aa787e2Bd192591",
    "contractAddress": "0x1C09CEe1C1F73E0100664F8A5a2f8cbCa84a55a9",
    "transactionIndex": 81,
    "gasUsed": "1286100",
    "logsBloom": "0x
    "blockHash": "0x273d4e9a0309977397458a9738be01466599fdb2ee82942a83481f14c6d496db",
    "transactionHash": "0x79b9ba5f044351e7ca8a37bc169474d7457a5d9bb241fdc13603e2c85edd394f",
    "logs": [],
    "blockNumber": 3985726,
    "cumulativeGasUsed": "17421799",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 3,
  "solcInputHash": "59b294ef747d40142a7739881d820f5a",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"}],\"name\":\"nftMarketPlace__alreadyListed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"nftMarketPlace__notAnyProceed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"nftMarketPlace__notApprovedByMarketPlace\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"}],\"name\":\"nftMarketPlace__notListed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"nftMarketPlace__notListedPrice\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"nftMarketPlace__notOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"nftMarketPlace__notZeroPriceNft\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"nftMarketPlace__transactionFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"Price\",\"type\":\"uint256\"}],\"name\":\"itemBought\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"}],\"name\":\"itemCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"itemListed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"}],\"name\":\"buyItem\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"}],\"name\":\"cancelItem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"}],\"name\":\"getListing\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"}],\"internalType\":\"struct nftMarketPlace.Listing\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"}],\"name\":\"getProceed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"listItem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"updateItem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawProceed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mrketPlace.sol\":\"nftMarketPlace\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"contracts/mrketPlace.sol\":{\"content\":\"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\\npragma solidity ^0.8.0;\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\nerror nftMarketPlace__notZeroPriceNft();\\nerror nftMarketPlace__notApprovedByMarketPlace();\\nerror nftMarketPlace__alreadyListed(address nftAddress, uint256 tokenID);\\nerror nftMarketPlace__notOwner();\\nerror nftMarketPlace__notListed(address nftAddress, uint256 tokenID);\\nerror nftMarketPlace__notListedPrice(\\n  address nftAddress,\\n  uint256 tokenId,\\n  uint256 price\\n);\\nerror nftMarketPlace__notAnyProceed();\\nerror nftMarketPlace__transactionFailed();\\n\\ncontract nftMarketPlace {\\n  struct Listing {\\n    uint256 price;\\n    address seller;\\n  }\\n  //events\\n  event itemListed(\\n    address indexed seller,\\n    address indexed nftAddress,\\n    uint256 indexed tokenId,\\n    uint256 price\\n  );\\n  event itemBought(\\n    address indexed buyer,\\n    address indexed nftAddress,\\n    uint256 indexed tokenID,\\n    uint256 Price\\n  );\\n  event itemCanceled(\\n    address indexed seller,\\n    address indexed nftAddress,\\n    uint256 indexed tokenID\\n  );\\n\\n  //nft contract address=>tokenId=>(price,seller)\\n  mapping(address => mapping(uint256 => Listing)) private s_listings;\\n  mapping(address => uint256) private s_proceed;\\n  //modifiers\\n  modifier notListed(\\n    address nftAddress,\\n    uint256 tokenID,\\n    address owner\\n  ) {\\n    Listing memory listing = s_listings[nftAddress][tokenID];\\n    if (listing.price > 0) {\\n      revert nftMarketPlace__alreadyListed(nftAddress, tokenID);\\n    }\\n    _;\\n  }\\n  modifier isOwner(\\n    address nftAddress,\\n    uint256 tokenID,\\n    address spender\\n  ) {\\n    IERC721 nft = IERC721(nftAddress);\\n    address owner = nft.ownerOf(tokenID);\\n    if (spender != owner) {\\n      revert nftMarketPlace__notOwner();\\n    }\\n    _;\\n  }\\n  modifier isListed(address nftAddress, uint256 tokenID) {\\n    Listing memory listing = s_listings[nftAddress][tokenID];\\n    if (listing.price <= 0) {\\n      revert nftMarketPlace__notListed(nftAddress, tokenID);\\n    }\\n    _;\\n  }\\n\\n  /*send nft to the contract=> transfer->contracts \\\"hold \\\"the nft\\n owner can still hold their nft and approve the marketPlace to sell nft for them\\n   */\\n  /*\\n   * @notice Method for listing NFT\\n   * @param nftAddress Address of NFT contract\\n   * @param tokenId Token ID of NFT\\n   * @param price sale price for each item\\n   */\\n  /////////////////\\n  //main function//\\n  /////////////////\\n  function listItem(\\n    address nftAddress,\\n    uint256 tokenID,\\n    uint256 price\\n  )\\n    external\\n    notListed(nftAddress, tokenID, msg.sender)\\n    isOwner(nftAddress, tokenID, msg.sender)\\n  {\\n    if (price <= 0) {\\n      revert nftMarketPlace__notZeroPriceNft();\\n    }\\n    IERC721 nft = IERC721(nftAddress);\\n    if (nft.getApproved(tokenID) != address(this)) {\\n      //\\n      revert nftMarketPlace__notApprovedByMarketPlace();\\n    }\\n    s_listings[nftAddress][tokenID] = Listing(price, msg.sender);\\n    emit itemListed(msg.sender, nftAddress, tokenID, price);\\n  }\\n\\n  function buyItem(\\n    address nftAddress,\\n    uint256 tokenID\\n  ) external payable isListed(nftAddress, tokenID) {\\n    Listing memory listedItem = s_listings[nftAddress][tokenID];\\n    if (msg.value < listedItem.price) {\\n      revert nftMarketPlace__notListedPrice(\\n        nftAddress,\\n        tokenID,\\n        listedItem.price\\n      );\\n    }\\n    s_proceed[listedItem.seller] = s_proceed[listedItem.seller] + msg.value;\\n    delete (s_listings[nftAddress][tokenID]);\\n    IERC721(nftAddress).safeTransferFrom(\\n      listedItem.seller,\\n      msg.sender,\\n      tokenID\\n    );\\n    emit itemBought(msg.sender, nftAddress, tokenID, listedItem.price);\\n  }\\n\\n  function cancelItem(\\n    address nftAddress,\\n    uint256 tokenID\\n  )\\n    external\\n    isListed(nftAddress, tokenID)\\n    isOwner(nftAddress, tokenID, msg.sender)\\n  {\\n    delete (s_listings[nftAddress][tokenID]);\\n    emit itemCanceled(msg.sender, nftAddress, tokenID);\\n  }\\n\\n  function updateItem(\\n    address nftAddress,\\n    uint256 tokenID,\\n    uint256 newPrice\\n  )\\n    external\\n    isListed(nftAddress, tokenID)\\n    isOwner(nftAddress, tokenID, msg.sender)\\n  {\\n    s_listings[nftAddress][tokenID].price = newPrice;\\n    emit itemListed(msg.sender, nftAddress, tokenID, newPrice);\\n  }\\n\\n  function withdrawProceed() external {\\n    uint256 proceed = s_proceed[msg.sender];\\n    if (proceed <= 0) {\\n      revert nftMarketPlace__notAnyProceed();\\n    }\\n    s_proceed[msg.sender] = 0;\\n    (bool success, ) = payable(msg.sender).call{ value: proceed }(\\\"\\\");\\n    if (!success) {\\n      revert nftMarketPlace__transactionFailed();\\n    }\\n  }\\n\\n  //listItem-list item in nft market place\\n  //buyItem-buy the nft\\n  //replaceiTEM-cancle the listing\\n  //updatelisting-update the price\\n  //withdraw proceed -withdraw payment for my bought nfts\\n  ////////////////////\\n  //getter function //\\n  ////////////////////\\n  function getListing(\\n    address nftAddress,\\n    uint256 tokenID\\n  ) external view returns (Listing memory) {\\n    return s_listings[nftAddress][tokenID];\\n  }\\n\\n  function getProceed(address seller) external view returns (uint256) {\\n    return s_proceed[seller];\\n  }\\n}\\n\",\"keccak256\":\"0x9d3f9a966e2a32dc4246815deab41b4309cd4ecba49278560232175e3bdbb8f3\",\"license\":\"SEE LICENSE IN LICENSE\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106100705760003560e01c806389bfd38f1161004e57806389bfd38f146100f25780638f6d40d21461011b5780639f37092a14610144578063a24d3c791461016057610070565b80633d756b5714610075578063781c1f1d1461008c57806388700d1c146100b5575b600080fd5b34801561008157600080fd5b5061008a61019d565b005b34801561009857600080fd5b506100b360048036038101906100ae9190611328565b610307565b005b3480156100c157600080fd5b506100dc60048036038101906100d7919061137b565b6105d5565b6040516100e99190611408565b60405180910390f35b3480156100fe57600080fd5b5061011960048036038101906101149190611328565b61069f565b005b34801561012757600080fd5b50610142600480360381019061013d919061137b565b610b15565b005b61015e6004803603810190610159919061137b565b610e01565b005b34801561016c57600080fd5b5061018760048036038101906101829190611423565b611216565b604051610194919061145f565b60405180910390f35b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000811161021b576040517fc1f9aeeb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060003373ffffffffffffffffffffffffffffffffffffffff1682604051610286906114ab565b60006040518083038185875af1925050503d80600081146102c3576040519150601f19603f3d011682016040523d82523d6000602084013e6102c8565b606091505b5050905080610303576040517fbb22283300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b828260008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020604051806040016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905060008160000151116104115782826040517e7e2e2b0000000000000000000000000000000000000000000000000000000081526004016104089291906114cf565b60405180910390fd5b858533600083905060008173ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b8152600401610454919061145f565b60206040518083038186803b15801561046c57600080fd5b505afa158015610480573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a4919061150d565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161461050b576040517fa1d1353a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b886000808d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008c815260200190815260200160002060000181905550898b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f9c6dfa5625407c4edd0ed0f699daa1eead567ca67ff49c153034999b20445d298c6040516105c0919061145f565b60405180910390a45050505050505050505050565b6105dd61125f565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020604051806040016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905092915050565b82823360008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020604051806040016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090506000816000015111156107ac5783836040517f582c14ed0000000000000000000000000000000000000000000000000000000081526004016107a39291906114cf565b60405180910390fd5b868633600083905060008173ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b81526004016107ef919061145f565b60206040518083038186803b15801561080757600080fd5b505afa15801561081b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061083f919061150d565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146108a6576040517fa1d1353a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008a116108e0576040517f984e16e500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008c90503073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1663081812fc8e6040518263ffffffff1660e01b8152600401610935919061145f565b60206040518083038186803b15801561094d57600080fd5b505afa158015610961573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610985919061150d565b73ffffffffffffffffffffffffffffffffffffffff16146109d2576040517fe47f5a6400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60405180604001604052808c81526020013373ffffffffffffffffffffffffffffffffffffffff168152506000808f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008e81526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050508b8d73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f9c6dfa5625407c4edd0ed0f699daa1eead567ca67ff49c153034999b20445d298e604051610afe919061145f565b60405180910390a450505050505050505050505050565b818160008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020604051806040016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090506000816000015111610c1f5782826040517e7e2e2b000000000000000000000000000000000000000000000000000000008152600401610c169291906114cf565b60405180910390fd5b848433600083905060008173ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b8152600401610c62919061145f565b60206040518083038186803b158015610c7a57600080fd5b505afa158015610c8e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cb2919061150d565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610d19576040517fa1d1353a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a81526020019081526020016000206000808201600090556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555050888a73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f33b700156ee7272e7a0b6b48d1c1832cb0e84e4e0adbe2d6dce742eed97c70af60405160405180910390a450505050505050505050565b818160008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020604051806040016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090506000816000015111610f0b5782826040517e7e2e2b000000000000000000000000000000000000000000000000000000008152600401610f029291906114cf565b60405180910390fd5b60008060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000868152602001908152602001600020604051806040016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050806000015134101561101a57858582600001516040517fdec8d1750000000000000000000000000000000000000000000000000000000081526004016110119392919061153a565b60405180910390fd5b3460016000836020015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461106991906115a0565b60016000836020015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008681526020019081526020016000206000808201600090556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550508573ffffffffffffffffffffffffffffffffffffffff166342842e0e826020015133886040518463ffffffff1660e01b8152600401611172939291906115f6565b600060405180830381600087803b15801561118c57600080fd5b505af11580156111a0573d6000803e3d6000fd5b50505050848673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f642067ff529c9b5b1162502fc8e8a3a91dda56e126a84f2fe38d341236231a828460000151604051611206919061145f565b60405180910390a4505050505050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b604051806040016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006112bf82611294565b9050919050565b6112cf816112b4565b81146112da57600080fd5b50565b6000813590506112ec816112c6565b92915050565b6000819050919050565b611305816112f2565b811461131057600080fd5b50565b600081359050611322816112fc565b92915050565b6000806000606084860312156113415761134061128f565b5b600061134f868287016112dd565b935050602061136086828701611313565b925050604061137186828701611313565b9150509250925092565b600080604083850312156113925761139161128f565b5b60006113a0858286016112dd565b92505060206113b185828601611313565b9150509250929050565b6113c4816112f2565b82525050565b6113d3816112b4565b82525050565b6040820160008201516113ef60008501826113bb565b50602082015161140260208501826113ca565b50505050565b600060408201905061141d60008301846113d9565b92915050565b6000602082840312156114395761143861128f565b5b6000611447848285016112dd565b91505092915050565b611459816112f2565b82525050565b60006020820190506114746000830184611450565b92915050565b600081905092915050565b50565b600061149560008361147a565b91506114a082611485565b600082019050919050565b60006114b682611488565b9150819050919050565b6114c9816112b4565b82525050565b60006040820190506114e460008301856114c0565b6114f16020830184611450565b9392505050565b600081519050611507816112c6565b92915050565b6000602082840312156115235761152261128f565b5b6000611531848285016114f8565b91505092915050565b600060608201905061154f60008301866114c0565b61155c6020830185611450565b6115696040830184611450565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006115ab826112f2565b91506115b6836112f2565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156115eb576115ea611571565b5b828201905092915050565b600060608201905061160b60008301866114c0565b61161860208301856114c0565b6116256040830184611450565b94935050505056fea26469706673582212206d2aace1a3d58157ea6b5d317913f855ff366660400b6b3d643b31e98fc317a864736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 2878,
        "contract": "contracts/mrketPlace.sol:nftMarketPlace",
        "label": "s_listings",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Listing)2843_storage))"
      },
      {
        "astId": 2882,
        "contract": "contracts/mrketPlace.sol:nftMarketPlace",
        "label": "s_proceed",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_struct(Listing)2843_storage))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => struct nftMarketPlace.Listing))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_struct(Listing)2843_storage)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_struct(Listing)2843_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct nftMarketPlace.Listing)",
        "numberOfBytes": "32",
        "value": "t_struct(Listing)2843_storage"
      },
      "t_struct(Listing)2843_storage": {
        "encoding": "inplace",
        "label": "struct nftMarketPlace.Listing",
        "members": [
          {
            "astId": 2840,
            "contract": "contracts/mrketPlace.sol:nftMarketPlace",
            "label": "price",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 2842,
            "contract": "contracts/mrketPlace.sol:nftMarketPlace",
            "label": "seller",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}